package handlers

type AutoGenerated struct {
	APIVersion string   `json:"apiVersion"`
	Kind       string   `json:"kind"`
	Metadata   Metadata `json:"metadata"`
	Spec       Spec     `json:"spec"`
}
type Metadata struct {
	Name      string `json:"name"`
	Namespace string `json:"namespace"`
}
type Labels struct {
	App string `json:"app"`
}
type WorkloadSelector struct {
	Labels Labels `json:"labels"`
}
type Filter struct {
	Name string `json:"name"`
}
type FilterChain struct {
	Filter Filter `json:"filter"`
}
type Listener struct {
	FilterChain FilterChain `json:"filterChain"`
}
type Match struct {
	Context  string   `json:"context"`
	Listener Listener `json:"listener"`
}
type TokenBucket struct {
	MaxTokens     string `json:"max_tokens"`
	TokensPerFill string `json:"tokens_per_fill"`
	FillInterval  string `json:"fill_interval"`
}

type TokenBucketInt struct {
	MaxTokens     int    `json:"maxTokens"`
	TokensPerFill int    `json:"tokensPerFill"`
	FillInterval  string `json:"fillInterval"`
}

type DefaultValue struct {
	Numerator   int    `json:"numerator"`
	Denominator string `json:"denominator"`
}
type FilterEnabled struct {
	RuntimeKey   string       `json:"runtime_key"`
	DefaultValue DefaultValue `json:"default_value"`
}
type FilterEnforced struct {
	RuntimeKey   string       `json:"runtime_key"`
	DefaultValue DefaultValue `json:"default_value"`
}
type Header struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}
type ResponseHeadersToAdd struct {
	Append bool   `json:"append"`
	Header Header `json:"header"`
}
type LimitValue struct {
	StatPrefix           string                 `json:"stat_prefix"`
	TokenBucket          TokenBucket            `json:"token_bucket"`
	FilterEnabled        FilterEnabled          `json:"filter_enabled"`
	FilterEnforced       FilterEnforced         `json:"filter_enforced"`
	ResponseHeadersToAdd []ResponseHeadersToAdd `json:"response_headers_to_add"`
}
type TypedConfig struct {
	Type    string     `json:"@type"`
	TypeURL string     `json:"type_url"`
	Value   LimitValue `json:"value"`
}
type Value struct {
	Name        string      `json:"name"`
	TypedConfig TypedConfig `json:"typed_config"`
}
type Patch struct {
	Operation string `json:"operation"`
	Value     Value  `json:"value"`
}
type ConfigPatches struct {
	ApplyTo string `json:"applyTo"`
	Match   Match  `json:"match"`
	Patch   Patch  `json:"patch"`
}
type Spec struct {
	WorkloadSelector WorkloadSelector `json:"workloadSelector"`
	ConfigPatches    []ConfigPatches  `json:"configPatches"`
}
